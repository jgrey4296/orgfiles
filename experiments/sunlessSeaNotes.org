* Sunless Sea / Fallen london                                                   :analysis:exammples:
** Question's You can ask

   Q.what //state
   .why //reason / history
   .where //location
   .when //time
   .will //schedule boolean

   .should //deontics
   .must
   .could
   .does

** Statements

   noun.is.description."something"
   .state.physical
   .state.deontical
   .changing.from.state
   .changing.to.state
   .schedule

* Kentucky Route Zero                                                           :exammples:analysis:
** Act Three Scene 2
   Question - Nothing to be done? (subtext: about the truck not running)
   Answer - Just won't start up again. <statement>

   root.truck.state.runnable!%{true,false}

   quips.check.on.truck->quip(S,T)
   quip?root.truck.state.runnable!true
   quip."Nothing to be done?"
   quip >> print(S,quip)
   quip.response.success."It'll take a minute"
   quip.response.failure."It seems to be broken."
   quip+ >> print(T,quip.response.success)
   quip- >> print(T,quip.response.failure)

* Speech Act Reference                                                          :speechActs:

** representative
   inform, deny, affirm, confirm.
   a truth statement
** directive
   command, invite, ask, beg
   influence the intention and behaviour of other
** commissive
   promise, commit
   self commitment to future action or state
** expressive
   description of self psychological state
** declarative
   statement of redefinition

* Speech act example                                                            :exclusionLogic:example:speechActs:
  "Hello {T.name}, how are you?"
  .id.greet1
  .greet
  .request!{T}.status
  conversation.stack.push.{T}


  "Why hello {T.name}, ${quip.sayStatus}"
  "${quip.sayStatus}"
  .responseTo.greet1

  "I am {Self.status}"
  .provide:Self.status
  .expressive
  .sayStatus

  "I couldn't be better"
  .precondition:Self.status.happy
  .provide:Self.status
  .expressive
  .sayStatus

  "I am angry at ${X}"
  .precondition:Self.status.angry.at.X
  .provide:Self.status
  .expressive
  .sayStatus

  self.status = happy | sad | angry | bored
