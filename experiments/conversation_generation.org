* Conversation Generation                                                       :dialogue:conversation:
  Treating conversation as a stack, similar to Ryan's Expressionist, seems promising.
  If conversation is treated as a stack, rather than a tree, could
  simplify the tracking of topics? 
  Would the conversation be simpler, or too simple?
  Would Elements on the stack be state machines to track repetition /
  returns?
  Some actions would clear the stack.
  A Single shared stack, or individual stacks for participants, or for
  categories?
  Would strategies that fulfill multiple stack entries be preferable?
  
  Speech act modelling?
  DAMSL

  Possibly separate performances from underlying data representation,
  and have multiple data forms of the same performances for different
  conditions.
  

  Potential process:
  1) create performance level strings
  2) annotate with variables
  3) annotate with conditions
  4) annotate with state changes
  5) 
     1) Connect with graph of conversation topics
     2) Connect with FSMs
     3) Run simulation to verify connectedness

* Structure?

Performance :: String     #p_"Hello ${name}"
Tag :: String             #t_Greeting
TagSet :: Set(Tag)        #{t_Greeting, t_Friendly}
Effects :: TagSet
Rule :: [Tag]             #[t_Name]
Variables :: {v_Var:Rule} #{v_name:[t_Name]}
SpeechAct :: (Performance, TagSet, [Rule], Variables, Effects) 

	
** Example:

 (p_"Drink?", [t_Question, t_Offer], [], [], [t_Open_Question, t_Offer_Drink])
 (p_"No thanks, ${honourific}. It's against the word of the Prophet, you
	 know.", [t_Refusal,t_Polite,t_Religious],
	 [t_Open_Question,t_Offer_Drink],[],
	 {honourific:[t_Originator.honourific]},[])

  
  

